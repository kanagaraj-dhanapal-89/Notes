round 2: 
  1) when to use "is" operator and "==" ?
  2) difference between tuple and dict or list 
  3) difference between mutablle and immutable
  4) String is mutable or immutable?
  5) sum of digits (python program )
  6) find all subset which is sum is equal to k
  
round 3:
  sround 1:
    1) python decorators 
    2) how to pass n of args 
    3) how to pass possinal args
    4) difference between java and python 
    5) diffference between int and Integer 
    6) git: merging vs rebash
    7) how do you optimize the query
    
  sround 2:
    1) diff between rdd and dataframe 
    2) what is git 
    3) CICD 
    4) optimzations in spark 
    5) explain about data warehousing 
    

python decorators, number of time a function is called
c = 0
def print_counter(f):
    
    def counter(a,b,c):
        c += 1
        print("add function calling %d time" % c)
        f(a,b,c)
        
        return c
    return counter

@print_counter
def add(a,b,c):
    print(" sum: " , a + b)
    
    
c = add(4,5, c)
c = add(5,5, c)

class decorators 

# Python program to execute
# time of a program
 
# importing time module
from time import time
class Timer:
 
    def __init__(self, func):
        self.function = func
 
    def __call__(self, *args, **kwargs):
        start_time = time()
        result = self.function(*args, **kwargs)
        end_time = time()
        print("Execution took {} seconds".format(end_time-start_time))
        return result
 
 
# adding a decorator to the function
@Timer
def some_function(delay):
    from time import sleep
 
    # Introducing some time delay to
    # simulate a time taking function.
    sleep(delay)
 
some_function(3)
